[
  {
    "name": "automatically-finding-posts-about-specific-trending-issues-and-generating-new-posts",
    "title": "특정 이슈가 되는 게시물을 찾아서 자동으로 게시물을 작성하기 (Takeoff. 제작기)",
    "tags": [
      "takeoff",
      "langchain",
      "vectorize",
      "llm"
    ],
    "createdAt": "2025-06-29T00:00:00.000Z",
    "path": "/posts/automatically-finding-posts-about-specific-trending-issues-and-generating-new-posts",
    "slicedContent": "\r\n# 특정 이슈가 되는 게시물을 찾아서 자동으로 게시물을 작성하기\r\n\r\n어찌보면 [Takeoff.](https://ai-takeoff.dev) 서비스를 만들게 된 핵심 구현 목표이다.\r\n\r\n개인적으로 Reddit, Hackernews에서 AI 관련 게시물을 자주 챙겨보는데, 이런 해외 커뮤니티에서 원하는 주제에 대한 글을 가져와서\r\n게시하는 서비스를 만들..."
  },
  {
    "name": "canvas-scatter-feat-visx",
    "title": "canvas로 scatterplot 그리기 (feat. visx)",
    "tags": [
      "takeoff",
      "canvas",
      "visx",
      "scatterplot",
      "data-visualization",
      "react"
    ],
    "createdAt": "2025-06-25T00:00:00.000Z",
    "path": "/posts/canvas-scatter-feat-visx",
    "slicedContent": "\n# canvas로 scatterplot 그리기 (feat. visx)\n\n![완성결과](/markdown/canvas-scatter-feat-visx/0.png)\n\n완성결과\n\nLLM 벤치마크 페이지 구현을 위해 날짜, 점수 축을 위한 scatterplot을 만들어보려고 한다. \n\n페이지 스타일링 일관성을 위해 `visx`와 캔버스로 직접 구현하였다.\n\nsv..."
  },
  {
    "name": "create-mcp-server-with-smithery",
    "title": "나만의 MCP 서버 만들기 (with. Smithery)",
    "tags": [
      "takeoff",
      "mcp",
      "smithery",
      "ai"
    ],
    "createdAt": "2025-07-06T00:00:00.000Z",
    "path": "/posts/create-mcp-server-with-smithery",
    "slicedContent": "\r\n# 나만의 MCP 서버 만들기 (with. Smithery)\r\n\r\n2024년 11월 25일 Anthropic이 개발한 [MCP](https://modelcontextprotocol.io/introduction) (Model Context Protocol)은 AI 모델과 외부 데이터 소스 또는 도구를 연결해주는\r\n개방형 표준 프로토콜이다.\r\n\r\nMCP는 ..."
  },
  {
    "name": "decorate-github-readme-with-jsx",
    "title": "JSX로 깃허브 리드미 꾸미기 (with. Satori)",
    "tags": [
      "github",
      "readme",
      "satori",
      "jsx"
    ],
    "createdAt": "2025-07-07T00:00:00.000Z",
    "path": "/posts/decorate-github-readme-with-jsx",
    "slicedContent": "\r\n# JSX로 깃허브 리드미 꾸미기 (with. Satori)\r\n[Satori](https://github.com/vercel/satori)를 통해 HTML과 CSS를 SVG로 변환할 수 있다는 것을 발견하고,\r\n이를 활용해 JSX 컴포넌트로 깃허브 리드미를 꾸미는 방법을 소개하려고 한다.\r\n\r\n먼저 완성본이다.\r\n- Preferred Tech와 Toy ..."
  },
  {
    "name": "design-page-with-bento-grid",
    "title": "Bento Grid 스타일로 프로젝트 소개 페이지 꾸미기",
    "tags": [
      "takeoff",
      "bento",
      "grid",
      "Next.js",
      "react"
    ],
    "createdAt": "2025-07-03T00:00:00.000Z",
    "path": "/posts/design-page-with-bento-grid",
    "thumbnail": "/markdown/design-page-with-bento-grid/0.png",
    "slicedContent": "# Bento Grid 스타일로 프로젝트 소개 페이지 꾸미기\r\n\r\n프로젝트의 기능을 한 눈에 볼 수 있는 페이지를 작성하려고 몇 가지 디자인 레퍼런스를 둘러보던 중 눈에 들어온 디자인이 있었다.\r\n\r\n애플의 프로젝트 소개 페이지. 이런 형식의 디자인을 벤토 그리드 디자인이라고 한다.\r\n<MDXComponentWrapper topDescription=\"애플의..."
  },
  {
    "name": "dynamic-generate-opengraph-image-with-nextjs-15",
    "title": "Next.js 15에서 동적으로 오픈그래프 이미지 생성 하기",
    "tags": [
      "Next.js",
      "opengraph image",
      "weblog"
    ],
    "createdAt": "2025-06-30T00:00:00.000Z",
    "path": "/posts/dynamic-generate-opengraph-image-with-nextjs-15",
    "slicedContent": "\r\n# Next.js 15에서 동적으로 오픈그래프 이미지 생성 하기\r\n\r\n소셜 미디어에서 링크를 공유할 때 보이는 이미지, 즉 오픈그래프(Open Graph) 이미지는 사용자의 클릭률을 크게 좌우하는 중요한 요소이다.\r\n\r\n블로그나 콘텐츠 사이트에서 각 포스트마다 고유한 오픈그래프 이미지를 일일이 제작하는 것은 현실적이지 않기 때문에 동적으로 오픈그래프 이..."
  },
  {
    "name": "implementing-i18n-takeoff",
    "title": "Takeoff. 서비스 다국어 지원하기 (feat. Next.js 15)",
    "tags": [
      "takeoff",
      "i18n",
      "Next.js"
    ],
    "createdAt": "2025-07-01T00:00:00.000Z",
    "path": "/posts/implementing-i18n-takeoff",
    "slicedContent": "\r\n# Takeoff. 서비스 다국어 지원하기 (feat. Next.js 15)\r\n\r\nTakeoff. 서비스 다국어 지원하기 (feat. Next.js 15)\r\n\r\n서비스 언어를 한국어만 지원하도록 설정하기에는 아쉬움이 남아서 영어를 추가로 지원하기로 했다.\r\n\r\n현재 상황에서 다국어 지원을 하기 위해 필요한 것은 다음과 같다.\r\n1. 하드코딩된 한국어 문..."
  },
  {
    "name": "nuxt3-vs-nextjs-compare",
    "title": "Nuxt 입문과 Next.js와의 비교",
    "tags": [
      "nuxt",
      "nextjs",
      "javascript",
      "typescript",
      "react",
      "vue"
    ],
    "createdAt": "2025-01-12T00:00:00.000Z",
    "path": "/posts/nuxt3-vs-nextjs-compare",
    "slicedContent": "# Nuxt 입문과 Next.js와의 비교\r\n[plero](https://github.com/windopper/plero) 프로젝트를 진행하면서 Nuxt 프레임워크를 처음 사용해보았다. Vue 자체를 처음 사용해보는 것이기 때문에 \r\n[Vue](https://ko.vuejs.org/)의 기본 문법만 간단하게 훑고 [Nuxt](https://nuxt.com/..."
  },
  {
    "name": "using-custom-components-in-serverside-mdx",
    "title": "서버사이드 MDX에서 커스텀 컴포넌트 사용하기",
    "tags": [
      "Next.js",
      "MDX",
      "React"
    ],
    "createdAt": "2025-07-06T00:00:00.000Z",
    "path": "/posts/using-custom-components-in-serverside-mdx",
    "slicedContent": "\r\n# 서버사이드 MDX에서 커스텀 컴포넌트 사용하기\r\n현재 이 블로그에서는 `next-mdx-remote`의 `compileMDX`를 사용하여 MDX 파일을 서버사이드에서 컴파일하고 있다.\r\n\r\n그러나 서버사이드에서 컴파일하는 방식은 MDX 내부에서 클라이언트 사이드에서만 동작하는 코드를 사용할 수 없는 문제가 있다.\r\n\r\n<MDXComponentWrap..."
  }
]